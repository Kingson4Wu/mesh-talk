name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os: macos-latest
            os-name: macos
            target: x86_64-apple-darwin
            binary-name: mesh-talk
          - os: macos-latest
            os-name: macos-aarch64
            target: aarch64-apple-darwin
            binary-name: mesh-talk
          - os: windows-latest
            os-name: windows
            target: x86_64-pc-windows-msvc
            binary-name: mesh-talk.exe

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.platform.target }}

      - name: Prepare assets
        shell: bash
        run: |
          mkdir -p release
          if [ "${{ matrix.platform.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary-name }} release/
            cd release
            7z a ../mesh-talk-${{ matrix.platform.os-name }}.zip ${{ matrix.platform.binary-name }}
          else
            cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary-name }} release/
            cd release
            tar -czf ../mesh-talk-${{ matrix.platform.os-name }}.tar.gz ${{ matrix.platform.binary-name }}
          fi

      - name: Get version from tag
        id: get_version
        shell: bash
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.version }}
          files: |
            mesh-talk-${{ matrix.platform.os-name }}.zip
            mesh-talk-${{ matrix.platform.os-name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
